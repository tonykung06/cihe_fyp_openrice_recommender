# Generated by Django 3.0.3 on 2024-04-22 15:44

import os

import ndjson
from django.db import migrations

from openrice_recommender_app.settings import BASE_DIR


def prepare_model_objects(District, Category, Restaurant):
    districts = []
    categories = []
    restaurants = []
    restaurant_categories_through = []

    print("\nstarting restaurant import!")

    # Streaming lines from ndjson file:
    with open(
        os.path.join(BASE_DIR, "./restaurant_reviews/data/restaurants.ndjson")
    ) as f:
        reader = ndjson.reader(f)

        for restaurant_record in reader:
            print(".", end="", flush=True)

            district_record = restaurant_record["district"]
            category_records = restaurant_record["categories"]

            restaurant_district = District(
                id=district_record["districtId"], name=district_record.get("name", "")
            )
            if restaurant_district not in districts:
                districts.append(restaurant_district)

            restaurant_categories = [
                Category(
                    id=int(
                        str(category_record["categoryTypeId"])
                        + str(category_record["categoryId"])
                    ),
                    name=category_record["name"],
                    category_type_id=category_record["categoryTypeId"],
                    category_type_key=category_record["searchKey"].split("=")[0],
                )
                for category_record in category_records
            ]
            for restaurant_category in restaurant_categories:
                if restaurant_category not in categories:
                    categories.append(restaurant_category)

            restaurant = Restaurant(
                id=restaurant_record["poiId"],
                name=restaurant_record.get("name", "")
                or restaurant_record.get("nameOtherLang", ""),
                address=restaurant_record.get("address", "")
                or restaurant_record.get("addressOtherLang", ""),
                image_url=restaurant_record.get("themeListingDoorPhoto", {}).get(
                    "url", ""
                )
                or "https://static6.orstatic.com/images/v5/default_inbox_poiphotolv.png?13",
                district=restaurant_district,
            )

            if restaurant not in restaurants:
                restaurants.append(restaurant)
                for restaurant_category in restaurant_categories:
                    restaurant_categories_through.append(
                        restaurant.categories.through(
                            restaurant_id=restaurant.id,
                            category_id=restaurant_category.id,
                        )
                    )

    return districts, categories, restaurants, restaurant_categories_through


def import_restaurants(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    # district, created = District.objects.using(db_alias).get_or_create(name="Central")
    District = apps.get_model("restaurant_reviews", "District")
    Category = apps.get_model("restaurant_reviews", "Category")
    Restaurant = apps.get_model("restaurant_reviews", "Restaurant")
    db_alias = schema_editor.connection.alias
    districts, categories, restaurants, restaurant_categories_through = (
        prepare_model_objects(District, Category, Restaurant)
    )
    District.objects.using(db_alias).bulk_create(districts)
    Category.objects.using(db_alias).bulk_create(categories)
    Restaurant.objects.using(db_alias).bulk_create(restaurants)
    Restaurant.categories.through.objects.using(db_alias).bulk_create(
        restaurant_categories_through
    )


class Migration(migrations.Migration):

    dependencies = [
        ("restaurant_reviews", "0001_initial"),
    ]

    operations = [
        # migrations.RunPython(import_restaurants, migrations.RunPython.noop),
        migrations.RunPython(migrations.RunPython.noop, migrations.RunPython.noop),
    ]
